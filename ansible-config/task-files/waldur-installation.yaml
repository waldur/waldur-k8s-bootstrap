- name: Install git
  dnf:
    pkg:
      - git
    state: installed
  when:
    - "'waldur/waldur-chart.zip' is not file"
    - initial_server | default(false) | bool

- name: Clone Waldur Helm repository
  git:
    repo: "{{ waldur_helm_repo_url | default('https://github.com/waldur/waldur-helm') }}"
    dest: waldur_helm
    force: yes
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'waldur/waldur-chart.zip' is not file"
    - initial_server | default(false) | bool

- name: Install unzip
  dnf:
    pkg:
      - unzip
    state: installed
  when:
    - "'waldur/waldur-chart.zip' is file"
    - initial_server | default(false) | bool

- name: Unarchive Waldur Helm chart
  unarchive:
    src: waldur/waldur-chart.zip
    dest: "."
  when:
    - "'waldur/waldur-chart.zip' is file"
    - initial_server | default(false) | bool

- name: Rename target Waldur Helm direcroty
  command: mv waldur-helm-master waldur_helm
  when:
    - "'waldur/waldur-chart.zip' is file"
    - initial_server | default(false) | bool

- name: Create an empty file for custom Waldur values
  copy:
    content: ""
    dest: waldur_helm/waldur/custom-values.yaml
    force: yes
  when:
    - initial_server | default(false) | bool

- name: Copy custom Waldur chart values
  copy:
    src: waldur/values.yaml
    dest: waldur_helm/waldur/custom-values.yaml
  when:
    - "'waldur/values.yaml' is file"
    - initial_server | default(false) | bool

- name: Find custom config directories
  find:
    paths: waldur/
    file_type: directory
  delegate_to: localhost
  become: no
  register: find_result
  when: initial_server | default(false) | bool

- name: Print found config directories
  debug: msg="{{ item.path }}"
  with_items: "{{ find_result.files }}"
  when:
    - initial_server | default(false) | bool
    - find_result.matched > 0

- name: Copy config directories
  copy:
    dest: "./waldur_helm/waldur/"
    src: "{{ item.path }}"
  with_items: "{{ find_result.files }}"
  when:
    - initial_server | default(false) | bool
    - find_result.matched > 0

- name: Add bitnami repository
  kubernetes.core.helm_repository:
    repo_name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'bitnami/postgresql-11.9.1.tgz' is not file"
    - "'bitnami/rabbitmq-10.3.5.tgz' is not file"
    - initial_server | default(false) | bool

- name: Install PostgreSQL release
  kubernetes.core.helm:
    release_name: postgresql
    chart_ref: bitnami/postgresql
    chart_version: 11.9.1
    state: present
    values_files:
      - ./waldur_helm/postgresql-values.yaml
    namespace: "{{ waldur_helm_namespace | default('default') }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'bitnami/postgresql-11.9.1.tgz' is not file"
    - initial_server | default(false) | bool
    - not (helm_commands_using_shell | default('false') | bool)

- name: Install PostgreSQL release via shell
  shell: |
    export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
    kubectl create namespace "{{ waldur_helm_namespace | default('default') }}" || true
    helm upgrade --install postgresql bitnami/postgresql --version 11.9.1 -n "{{ waldur_helm_namespace | default('default') }}" -f waldur_helm/postgresql-values.yaml
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'bitnami/postgresql-11.9.1.tgz' is not file"
    - initial_server | default(false) | bool
    - helm_commands_using_shell | default('false') | bool

- name: Install RabbitMQ release
  kubernetes.core.helm:
    release_name: rmq
    chart_ref: bitnami/rabbitmq
    chart_version: 10.3.5
    state: present
    values_files:
      - ./waldur_helm/rmq-values.yaml
    namespace: "{{ waldur_helm_namespace | default('default') }}"
    create_namespace: true
    update_repo_cache: true
    kubeconfig: /etc/rancher/rke2/rke2.yaml
  when:
    - "'bitnami/rabbitmq-10.3.5.tgz' is not file"
    - initial_server | default(false) | bool
    - not (helm_commands_using_shell | default('false') | bool)

- name: Install RabbitMQ release via shell
  shell: |
    export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
    helm upgrade --install rmq bitnami/rabbitmq --version 10.3.5 -n "{{ waldur_helm_namespace | default('default') }}" -f waldur_helm/rmq-values.yaml
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'bitnami/rabbitmq-10.3.5.tgz' is not file"
    - initial_server | default(false) | bool
    - helm_commands_using_shell | default('false') | bool

- name: Copy PostgreSQL chart archive
  copy:
    src: bitnami/postgresql-11.9.1.tgz
    dest: postgresql-11.9.1.tgz
  when:
    - "'bitnami/postgresql-11.9.1.tgz' is file"
    - initial_server | default(false) | bool

- name: Copy RMQ chart archive
  copy:
    src: bitnami/rabbitmq-10.3.5.tgz
    dest: rabbitmq-10.3.5.tgz
  when:
    - "'bitnami/rabbitmq-10.3.5.tgz' is file"
    - initial_server | default(false) | bool

- name: Install PostrgeSQL release (from archive)
  kubernetes.core.helm:
    release_name: postgresql
    chart_ref: postgresql-11.9.1.tgz
    state: present
    values_files:
      - ./waldur_helm/postgresql-values.yaml
    namespace: "{{ waldur_helm_namespace | default('default') }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
  when:
    - "'bitnami/postgresql-11.9.1.tgz' is file"
    - initial_server | default(false) | bool
    - not (helm_commands_using_shell | default('false') | bool)

- name: Install RabbitMQ release (from archive)
  kubernetes.core.helm:
    release_name: rmq
    chart_ref: rabbitmq-10.3.5.tgz
    state: present
    values_files:
      - ./waldur_helm/rmq-values.yaml
    namespace: "{{ waldur_helm_namespace | default('default') }}"
    create_namespace: true
    update_repo_cache: true
    kubeconfig: /etc/rancher/rke2/rke2.yaml
  when:
    - "'bitnami/rabbitmq-10.3.5.tgz' is file"
    - initial_server | default(false) | bool
    - not (helm_commands_using_shell | default('false') | bool)

- name: Install RabbitMQ release via shell (from archive)
  shell: |
    export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
    helm upgrade --install rmq bitnami/rabbitmq-10.3.5.tgz -n "{{ waldur_helm_namespace | default('default') }}" -f waldur_helm/rmq-values.yaml
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'bitnami/rabbitmq-10.3.5.tgz' is file"
    - initial_server | default(false) | bool
    - helm_commands_using_shell | default('false') | bool

- name: Install Waldur release
  kubernetes.core.helm:
    chart_ref: "./waldur_helm/waldur/"
    release_name: waldur
    values_files:
      - "./waldur_helm/waldur/values.yaml"
      - "./waldur_helm/waldur/custom-values.yaml"
    state: present
    namespace: "{{ waldur_helm_namespace | default('default') }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    timeout: 30m0s
  when:
    - initial_server | default(false) | bool
    - not (helm_commands_using_shell | default('false') | bool)

- name: Install Waldur release via shell
  shell: |
    export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
    helm upgrade --install waldur waldur/ -n "{{ waldur_helm_namespace | default('default') }}" -f waldur/values.yaml -f waldur/custom-values.yaml --timeout 30m0s
  environment: "{{ proxy_env | default({}) }}"
  when:
    - initial_server | default(false) | bool
    - helm_commands_using_shell | default('false') | bool

- name: Get release list in the namespace
  command: helm ls
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/rke2/rke2.yaml"
  register: helm_releases

- name: Print release list
  debug:
    msg: "{{ helm_releases.stdout }}"
  run_once: true

- name: Cleanup waldur_helm directory
  file:
    path: waldur_helm
    state: absent
  when:
    - initial_server | default(false) | bool
