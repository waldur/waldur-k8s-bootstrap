# Prerequisites for Archive-based installation
- import_tasks: package-prerequisites.yaml

- name: Install unzip
  dnf:
    pkg:
      - unzip
    state: installed
  when:
    - "'waldur/waldur-chart.zip' is file"

# Archive-based installation
- name: Unarchive Waldur Helm chart
  unarchive:
    src: waldur/waldur-chart.zip
    dest: "."
  when:
    - "'waldur/waldur-chart.zip' is file"

- name: Rename target Waldur Helm direcroty
  command: mv waldur-helm-master waldur_helm
  when:
    - "'waldur/waldur-chart.zip' is file"

# Repo-based installation
- name: Clone Waldur Helm repository
  git:
    repo: "{{ waldur_helm_repo_url | default('https://github.com/waldur/waldur-helm') }}"
    dest: waldur_helm
    force: yes
    version: "{{ helm_repo_version }}"
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'waldur/waldur-chart.zip' is not file"
    - helm_repo_tag is not defined
  vars:
    helm_repo_version: "{{ 'HEAD' if helm_waldur_image_tag | default('latest') == 'latest' else helm_waldur_image_tag }}"

- name: Clone Waldur Helm repository with custom tag
  git:
    repo: "{{ waldur_helm_repo_url | default('https://github.com/waldur/waldur-helm') }}"
    dest: waldur_helm
    force: yes
    version: "{{ helm_repo_tag }}"
  environment: "{{ proxy_env | default({}) }}"
  when:
    - "'waldur/waldur-chart.zip' is not file"
    - helm_repo_tag is defined

- name: Copy custom Waldur chart values
  template:
    src: waldur/values.yaml
    dest: waldur_helm/waldur/custom-values.yaml

- name: Add proxy env in custom values file
  blockinfile:
    path: waldur_helm/waldur/custom-values.yaml
    state: present
    block: |
      proxy:
        httpsProxy: {{ proxy_env['https_proxy'] | default('') }}
        httpProxy: {{ proxy_env['http_proxy'] | default('') }}
        noProxy: {{ proxy_env['no_proxy'] | default('') }}
  when:
    - proxy_env is defined

- name: Find custom config directories
  find:
    paths: waldur/
    file_type: directory
  delegate_to: localhost
  become: no
  register: find_result

- name: Print found config directories
  debug: msg="{{ item.path }}"
  with_items: "{{ find_result.files }}"
  when:
    - find_result.matched > 0

- name: Copy config directories
  copy:
    dest: "./waldur_helm/waldur/"
    src: "{{ item.path }}"
  with_items: "{{ find_result.files }}"
  when:
    - find_result.matched > 0

- import_tasks: create-waldur-backup.yaml
  when:
    - waldur_create_backup | default(true) | bool

- name: Install Waldur release
  kubernetes.core.helm:
    chart_ref: "./waldur_helm/waldur/"
    release_name: waldur
    dependency_update: true
    values_files:
      - "./waldur_helm/waldur/values.yaml"
      - "./waldur_helm/waldur/custom-values.yaml"
    values:
      waldur:
        imageTag: "{{ waldur_image_tag | default('latest') }}"
    state: present
    namespace: "{{ waldur_helm_namespace | default('default') }}"
    kubeconfig: /etc/rancher/rke2/rke2.yaml
    timeout: 30m0s
  environment: "{{ proxy_env | default({}) }}"

- name: Get release list in the namespace
  command: helm ls -n "{{ waldur_helm_namespace | default('default') }}"
  run_once: true
  environment:
    KUBECONFIG: "/etc/rancher/rke2/rke2.yaml"
  register: helm_releases

- name: Print release list
  debug:
    msg: "{{ helm_releases.stdout }}"
  run_once: true
