#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  dontlognull
    option http-server-close
    option                  forwardfor
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout http-keep-alive 2s
    timeout queue           5s
    timeout connect         10s
    timeout tunnel          2m
    timeout client          3h
    timeout server          3h
    timeout client-fin      1s
    timeout server-fin      1s
    timeout check           1s
    timeout server          30s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend ft_http
    bind :80
    mode http
{% if lb_network_allowed is defined %}
    acl whitelist src {{ lb_network_allowed }}
    tcp-request inspect-delay 2s
    tcp-request content accept if whitelist
    tcp-request content reject
{% endif %}
    default_backend bk_http

frontend ft_https
    bind :443
    mode tcp

{% if lb_network_allowed is defined %}
    acl whitelist src {{ lb_network_allowed }}
    tcp-request inspect-delay 2s
    tcp-request content accept if whitelist
    tcp-request content reject
{% endif %}
    default_backend bk_https

{% if expose_k8s_api is defined %}
frontend ft_k8s
    bind :6443
    mode tcp
{% if lb_network_allowed is defined %}
    acl whitelist src {{ lb_network_allowed }}
    tcp-request inspect-delay 2s
    tcp-request content accept if whitelist
    tcp-request content reject
{% endif %}
    default_backend bk_k8s
{% endif %}

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------

backend bk_http
    mode http
    balance roundrobin
    stick on src table bk_https
    default-server inter 1s
{% for host in backend_servers %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:80 check
{% endfor %}

backend bk_https
    mode tcp
    balance roundrobin
    stick-table type ip size 200k expire 30m
    stick on src
    default-server inter 1s
{% for host in backend_servers %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:443 check
{% endfor %}

{% if expose_k8s_api is defined %}
backend bk_k8s
    mode tcp
    balance roundrobin
    stick-table type ip size 200k expire 30m
    stick on src
    default-server inter 1s
{% for host in backend_servers %}
    server {{ host }} {{ hostvars[host]['ansible_host'] }}:6443 check
{% endfor %}
{% endif %}

listen stats
    bind *:9000 ssl crt /etc/pki/tls/certs/haproxy.pem no-sslv3
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /stats
    stats auth admin:{{ haproxy_stats_password }}
