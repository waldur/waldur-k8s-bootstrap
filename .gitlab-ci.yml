include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"

Lint MD files:
  image: registry.gitlab.com/pipeline-components/markdownlint:latest
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "*.md"
        - docs/**/*
  script:
    - echo "all" >> markdownlint-style.rb
    - echo "exclude_rule 'MD013'" >> markdownlint-style.rb
    - echo "exclude_rule 'MD033'" >> markdownlint-style.rb
    - echo "exclude_rule 'MD041'" >> markdownlint-style.rb
    - echo "exclude_rule 'MD046'" >> markdownlint-style.rb
    - echo "rule 'MD024', :allow_different_nesting => true" >> markdownlint-style.rb
    - echo "rule 'MD029', :style => :ordered" >> markdownlint-style.rb
    - mdl --style markdownlint-style.rb .
  before_script: []

Upload docs:
  image:
    name: registry.hpc.ut.ee/mirror/alpine/git:v2.30.2
    entrypoint: [""]
  stage: deploy
  interruptible: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "schedule"'
  script:
    - cd /tmp/
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-docs.git"
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - cd waldur-docs/
    - ls docs/admin-guide/rke2-setup || mkdir -p docs/admin-guide/rke2-setup
    - cp -v $CI_PROJECT_DIR/README.md docs/admin-guide/rke2-setup/RKE2-setup.md
    - git add docs/admin-guide/rke2-setup/
    - git commit -m 'Update REK2 bootstrap docs' || exit 0
    - git branch new-rke2-bootstrap-docs
    - git push --set-upstream origin new-rke2-bootstrap-docs:master

Test deployment:
  image: registry.hpc.ut.ee/mirror/opennode/k8s-deployment:0.1.6
  stage: test
  interruptible: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  script:
    - ansible-playbook -D -M /usr/local/lib/python3.8/site-packages -i test/test-inventory test/prepare-nodes.yaml
    - cat test/test-inventory
    - sleep 5
    - mkdir -p .ssh
    - cp -vf $WALDUR_DEV_SSH_PKEY .ssh/id_waldur_dev_ssh_pkey
    - cp -vf $WALDUR_DEV_SSH_PUBKEY .ssh/id_waldur_dev_ssh_pkey.pub
    - chmod 600 .ssh/id_waldur_dev_ssh_pkey
    - ansible-galaxy collection install kubernetes.core
    - cp -vf test/test-inventory ansible-config/rke2_inventory
    - echo 'lb_public_domain_name:' $LB_NAME >> ansible-config/rke2_vars.custom
    - cp -vf test/waldur-values.yaml ansible-config/waldur/values.yaml
    - cd ansible-config
    - ansible-playbook -D -i rke2_inventory install-infrastructure.yaml --key-file ../.ssh/id_waldur_dev_ssh_pkey
    - sleep 60
    - ansible-playbook -D -i rke2_inventory install-applications.yaml --key-file ../.ssh/id_waldur_dev_ssh_pkey
    - ansible-playbook -D -i rke2_inventory add-haproxy-host.yml --key-file ../.ssh/id_waldur_dev_ssh_pkey
    - ansible k8s-test-n1 -i rke2_inventory --become --key-file ../.ssh/id_waldur_dev_ssh_pkey -m fetch -a 'src=/etc/rancher/rke2/rke2.yaml dest=rke2-test-kubeconfig.yaml flat=yes'
    - sed -i "s/127.0.0.1/$LB_NAME/" rke2-test-kubeconfig.yaml
    - sed -i "s/default/rke2-waldur-test/g" rke2-test-kubeconfig.yaml
    - rm -fv ../.ssh/id_waldur_dev_ssh_pkey ../.ssh/id_waldur_dev_ssh_pkey.pub
  artifacts:
    paths:
      - ansible-config/rke2-test-kubeconfig.yaml
